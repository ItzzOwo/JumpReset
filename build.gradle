plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "io.freefair.lombok" version "8.0.1"
    id "io.github.juuxel.loom-quiltflower" version "1.8.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

def release_tag = System.getenv("RELEASE_TAG")
def build_id = System.getenv("BUILD_ID")

version = release_tag == null ? "mc${project.minecraft_version}-${project.mod_version}" : release_tag

if (build_id != null) {
    version += build_id == 'SNAPSHOT' ? '-SNAPSHOT' : "+build.${build_id}"
}

loom {
    accessWidenerPath = file("src/main/resources/phosphor.accesswidener")
	
	mixin {
        defaultRefmapName = "mixins.phosphor.refmap.json"
    }
}

repositories {
    maven { url 'https://maven.uku3lig.net/snapshots' }
}

configurations {
    shadowImpl

    implementation.extendsFrom shadowImpl
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    shadowImpl "io.github.spair:imgui-java-binding:${project.imguiVersion}"
    shadowImpl "io.github.spair:imgui-java-lwjgl3:${project.imguiVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    shadowImpl "io.github.spair:imgui-java-natives-windows-ft:${project.imguiVersion}"
    shadowImpl "io.github.spair:imgui-java-natives-linux-ft:${project.imguiVersion}"
    shadowImpl "io.github.spair:imgui-java-natives-macos-ft:${project.imguiVersion}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

jar {
    from "LICENSE.txt"
}

shadowJar {
    configurations = [project.configurations.shadowImpl]
    archiveClassifier = "shadow"

    dependencies {
        exclude(dependency('org.lwjgl:lwjgl'))
        exclude(dependency('org.lwjgl:lwjgl-glfw'))
        exclude(dependency('org.lwjgl:lwjgl-opengl'))
    }
}

remapJar {
    dependsOn shadowJar
    inputFile.set(shadowJar.archiveFile)

    archiveClassifier = null
}
